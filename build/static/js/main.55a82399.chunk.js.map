{"version":3,"sources":["StateProvivder.js","reducer.js","Search.js","Home.js","useGoogleSearch.js","keys.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","console","log","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","Link","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55a82399.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nexport const useStateValue = () => useContext(StateContext);\n","export const initialState = {\n  term: null,\n};\nexport const actionTypes = {\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_SEARCH_TERM:\n      return {\n        ...state,\n        term: action.term,\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React, { useState } from \"react\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvivder\";\nimport { actionTypes } from \"./reducer\";\n\nfunction Search({ hideButtons = false }) {\n  const [{}, dispatch] = useStateValue();\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n\n  const search = (e) => {\n    e.preventDefault();\n    console.log(\"You hit the button\");\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: input,\n    });\n\n    history.push(\"/search\");\n  };\n  return (\n    <form className=\"search\">\n      <div className=\"search_input\">\n        <SearchIcon className=\"search_InputIcon\" />\n        <input value={input} onChange={(e) => setInput(e.target.value)} />\n        <MicIcon />\n      </div>\n      {!hideButtons ? (\n        <div className=\"search_buttons\">\n          <Button type=\"submit\" onClick={search} variant=\"outlined\">\n            Google Search\n          </Button>\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n        </div>\n      ) : (\n        <div className=\"search_buttons\">\n          <Button\n            className=\"search_buttonsHidden\"\n            type=\"submit\"\n            onClick={search}\n            variant=\"outlined\"\n          >\n            Google Search\n          </Button>\n          <Button className=\"search_buttonsHidden\" variant=\"outlined\">\n            I'm Feeling Lucky\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport { Avatar } from \"@material-ui/core\";\nimport Search from \"./Search\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home_header\">\n        <div className=\"home_headerLeft\">\n          <Link to=\"/about\">About</Link>\n          <Link to=\"/store\">Store</Link>\n        </div>\n        <div className=\"home_headerRight\">\n          <Link to=\"/gmail\">Gmail</Link>\n          <Link to=\"/images\">Images</Link>\n\n          <AppsIcon />\n          <Avatar />\n        </div>\n      </div>\n      <div className=\"home_body\">\n        <img\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\n          alt=\"\"\n        />\n        <div className=\"home_inputContainer\">\n          <Search />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport API_KEY from \"./keys\";\n\nconst CONTEXT_KEY = \"d7c2ebd075336846b\";\nconst useGoogleSearch = (term) => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          setData(result);\n        });\n    };\n    fetchData();\n  }, [term]);\n  return { data };\n};\n\nexport default useGoogleSearch;\n","export const API_KEY = \"AIzaSyCt_u87tTd9NurpZsZwuH1wMpsNvgLA5KE\";\nexport default API_KEY;\n","import React from \"react\";\nimport \"./SearchPage.css\";\nimport { useStateValue } from \"./StateProvivder\";\nimport useGoogleSearch from \"./useGoogleSearch\";\nimport Response from \"./response\";\nimport { Link } from \"@material-ui/core\";\nimport Search from \"./Search\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nfunction SearchPage() {\n  const [{ term = \"Tesla\" }, dispatch] = useStateValue();\n\n  const { data } = useGoogleSearch(term);\n  // const data = Response;\n  console.log(data);\n  return (\n    <div className=\"searchPage\">\n      <div className=\"searchPage_header\">\n        <Link to=\"/\">\n          <img\n            className=\"searchPage_logo\"\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\n            alt=\"\"\n          />\n        </Link>\n        <div className=\"searchPage_headrBody\">\n          <Search hideButtons />\n          <div className=\"searchPage_options\">\n            <div className=\"searchPage_optionsLeft\">\n              <div className=\"searchPage_option\">\n                <SearchIcon />\n                <Link to=\"/all\">All</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <DescriptionIcon />\n                <Link to=\"/news\">News</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <ImageIcon />\n                <Link to=\"/images\">Images</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <LocalOfferIcon />\n                <Link to=\"/shopping\">Shopping</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <RoomIcon />\n                <Link to=\"/maps\">Maps</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <MoreVertIcon />\n                <Link to=\"/more\">More</Link>\n              </div>\n            </div>\n            <div className=\"searchPage_optionsRight\">\n              <div className=\"searchPage_option\">\n                <Link to=\"/settings\">Settings</Link>\n              </div>\n              <div className=\"searchPage_option\">\n                <Link to=\"/tools\">Tools</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {term && (\n        <div className=\"searchPage_results\">\n          <p className=\"searchPage_resultCount\">\n            About {data?.searchInformation.formattedTotalResults} results (\n            {data?.searchInformation.formattedSearchTime}\n            seconds) for {term}\n          </p>\n\n          {data?.items.map((item) => (\n            <div className=\"searchPage_result\">\n              <a href={item.link}>\n                {item.pagemap?.cse_image?.length > 0 &&\n                  item.pagemap?.cse_image[0]?.src && (\n                    <img\n                      className=\"searchPage_resutImage\"\n                      src={item.pagemap?.cse_image[0]?.src}\n                      alt=\"\"\n                    />\n                  )}\n                {item.displayLink}\n              </a>\n              <a className=\"searchPage_resultTitle\" href={item.link}>\n                <h2>{item.title}</h2>\n              </a>\n              <p className=\"searchPage_resultSnippet\">{item.snippet}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nimport Search from \"./Search\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvivder\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}